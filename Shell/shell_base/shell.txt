1.test
test 表达式 或 test [ 表达式 ] "[" 之后及 "]" 之前要留空格
n1 -eq n2  等于
n1 -ne n2  	不等于
n1 -gt n2  	大于
n1 -lt n2  	小于
n1 -ge n2	大于等于
n1 -le n2 	小于等于

文件属性
-b file		文件存在且为块设备
-c file		文件存在且为字符设备
-r file		文件存在且可只读
-w file		文件存在且可可写
-x file		文件存在且可执行
-s file		文件存在且长度大于零
-d file		目录
-f file		文件file是否是普通文件
-e file   	文件是否存在

字符串 
-z s1  		s1的长度是零，则为真
-n s1  		s1的长度不为零，则为真
s1 = s2  	s1和s2相等，则为真  前后空格
s1 != s2  	s1和s2不等，则为真	前后空格
s1     	  	s1不是空串，则为真

逻辑运算符
-a		与
-o		或
!		非

2.shell的控制结构
if then else elif

if 表达式
then 命令表
[else 命令表]
fi

if 表达式; then
[else 命令表]
fi

if 表达式
then 命令表
elif
then 命令表
else 命令表
fi 

case 表达式 in 
模式11[模式12]..) 命令表1;;
模式21[模式22]..) 命令表2;;
...
esac

while 表达式
do 
	命令表
done

for 变量 [ in 列表 ]
do 
	命令表
done

3.函数
function abc()
{
}

abc//执行

传参
利用$1 $2 $3
p_num()
{
	num=$1
	echo $num
}

for n int $@
do
	p_num $n
done