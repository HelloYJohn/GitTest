(defun our-copy-list (lst)
  (if (atom lst)
      lst
    (cons (car lst) (our-copy-list (cdr lst))))
  )
(our-copy-list x)
(setf x '(a b c)
      y (our-copy-list x))
(eql x y)
(defun n-elts (elt n)
     (if (> n 1)
         (list n elt)
       elt))

(defun compr (elt n lst)
  (if (null lst)
      (list (n-elts elt n))
    (let ((next (car lst)))
      (if (eql next elt)
          (compr elt (+ n 1) (cdr lst))
        (cons (n-elts elt n)
              (compr next 1 (cdr lst))))))
  )

(defun compress (x)
  (if (consp x)
      (compr (car x) 1 (cdr x))
    x)
  )

(compress '(1 1 1 0 1 0 0 0 0 1))